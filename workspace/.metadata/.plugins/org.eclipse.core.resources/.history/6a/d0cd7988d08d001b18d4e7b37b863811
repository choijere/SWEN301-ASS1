package nz.ac.wgtn.swen301.assignment1.cli;

import java.sql.*;

import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

import nz.ac.wgtn.swen301.assignment1.StudentManager;
import nz.ac.wgtn.swen301.studentdb.StudentDB;

public class FindStudentDetails {

    // AND IN ITS INITIAL STATE BEFORE EACH TEST RUNS
    @Before
    public void init() {
        StudentDB.init();
    }
    // DO NOT REMOVE BLOCK ENDS HERE

    // Open and Close connections.		credit: glimpse of the code from a buddy of mine, it sounded like a cool idea.
    @BeforeClass
    public static void openConnection() { StudentManager.openConnection(); }
    
    @AfterClass
    public static void closeConnection() { StudentManager.closeConnection(); }
    
    // THE FOLLOWING METHOD MUST IMPLEMENTED
    /**
     * Executable: the user will provide a student id as single argument, and if the details are found,
     * the respective details are printed to the console.
     * E.g. a user could invoke this by running "java -cp <someclasspath> nz.ac.wgtn.swen301.assignment1.cli.FindStudentDetails id42"
     * @param arg
     */
    public static void main (String[] arg) {
    	//I have no idea what I'm doing
    	
    	System.out.println(arg[0]);
    }
}
